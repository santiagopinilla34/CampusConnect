@model CampusConnect.Models.Student
@{
    ViewData["Title"] = "Student Details";
}

<style>
    .details-container {
        max-width: 1200px;
        margin: 0 auto;
        animation: fadeInUp 0.6s ease;
    }

    

    .page-header {
        background: rgba(255, 255, 255, 0.9);
        backdrop-filter: blur(10px);
        border-radius: 24px;
        padding: 2.5rem;
        margin-bottom: 2rem;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
        border: 1px solid rgba(255, 255, 255, 0.3);
        animation: slideInRight 0.6s ease;
    }

    .page-title {
        font-size: 2.5rem;
        font-weight: 800;
        background: linear-gradient(135deg, #4f46e5, #06b6d4);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
        margin: 0;
        display: flex;
        align-items: center;
        gap: 1rem;
    }

        .page-title i {
            font-size: 2.5rem;
            background: linear-gradient(135deg, #4f46e5, #06b6d4);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

    .student-profile-card {
        background: white;
        border-radius: 24px;
        padding: 2.5rem;
        margin-bottom: 2rem;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.08);
        border: 1px solid rgba(79, 70, 229, 0.1);
        animation: fadeInUp 0.6s ease 0.2s backwards;
    }

    .profile-header {
        display: flex;
        align-items: center;
        gap: 2rem;
        margin-bottom: 2.5rem;
        padding-bottom: 2rem;
        border-bottom: 2px solid #e2e8f0;
    }

    .profile-avatar {
        width: 120px;
        height: 120px;
        border-radius: 24px;
        background: linear-gradient(135deg, #4f46e5, #7c3aed);
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-weight: 700;
        font-size: 3rem;
        box-shadow: 0 8px 24px rgba(79, 70, 229, 0.4);
        flex-shrink: 0;
    }

    .profile-info {
        flex: 1;
    }

    .profile-name {
        font-size: 2rem;
        font-weight: 700;
        color: #1e293b;
        margin-bottom: 0.5rem;
    }

    .profile-email {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        color: #64748b;
        font-size: 1.1rem;
        padding: 0.5rem 1rem;
        background: rgba(79, 70, 229, 0.05);
        border-radius: 12px;
        font-weight: 500;
    }

        .profile-email i {
            color: #4f46e5;
        }

    .details-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 1.5rem;
        margin-bottom: 2rem;
    }

    .detail-item {
        background: linear-gradient(135deg, rgba(79, 70, 229, 0.05), rgba(124, 58, 237, 0.05));
        padding: 1.5rem;
        border-radius: 16px;
        border: 2px solid rgba(79, 70, 229, 0.1);
        transition: all 0.3s ease;
    }

        .detail-item:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 20px rgba(79, 70, 229, 0.15);
            border-color: rgba(79, 70, 229, 0.3);
        }

    .detail-label {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        font-size: 0.875rem;
        font-weight: 600;
        color: #64748b;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        margin-bottom: 0.75rem;
    }

        .detail-label i {
            color: #4f46e5;
            font-size: 1rem;
        }

    .detail-value {
        font-size: 1.25rem;
        font-weight: 700;
        color: #1e293b;
    }

    .gpa-badge {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.5rem 1rem;
        border-radius: 12px;
        font-weight: 700;
        font-size: 1.25rem;
    }

    .gpa-high {
        background: linear-gradient(135deg, #10b981, #059669);
        color: white;
        box-shadow: 0 4px 12px rgba(16, 185, 129, 0.3);
    }

    .gpa-medium {
        background: linear-gradient(135deg, #f59e0b, #d97706);
        color: white;
        box-shadow: 0 4px 12px rgba(245, 158, 11, 0.3);
    }

    .gpa-low {
        background: linear-gradient(135deg, #ef4444, #dc2626);
        color: white;
        box-shadow: 0 4px 12px rgba(239, 68, 68, 0.3);
    }

    .courses-section {
        background: white;
        border-radius: 24px;
        padding: 2.5rem;
        margin-bottom: 2rem;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.08);
        border: 1px solid rgba(79, 70, 229, 0.1);
        animation: fadeInUp 0.6s ease 0.4s backwards;
    }

    .section-title {
        font-size: 1.75rem;
        font-weight: 700;
        color: #1e293b;
        margin-bottom: 1.5rem;
        display: flex;
        align-items: center;
        gap: 0.75rem;
    }

        .section-title i {
            color: #4f46e5;
            font-size: 1.5rem;
        }

    .courses-list {
        list-style: none;
        padding: 0;
        margin: 0;
    }

    .course-item {
        background: linear-gradient(90deg, rgba(79, 70, 229, 0.05), rgba(124, 58, 237, 0.05));
        padding: 1.5rem;
        border-radius: 16px;
        margin-bottom: 1rem;
        border: 2px solid rgba(79, 70, 229, 0.1);
        display: flex;
        justify-content: space-between;
        align-items: center;
        transition: all 0.3s ease;
    }

        .course-item:hover {
            transform: translateX(10px);
            box-shadow: 0 4px 16px rgba(79, 70, 229, 0.15);
            border-color: rgba(79, 70, 229, 0.3);
        }

    .course-title {
        font-weight: 600;
        color: #1e293b;
        font-size: 1.1rem;
        display: flex;
        align-items: center;
        gap: 0.75rem;
    }

        .course-title i {
            color: #4f46e5;
        }

    .grade-badge {
        padding: 0.5rem 1rem;
        border-radius: 12px;
        font-weight: 700;
        font-size: 1rem;
        min-width: 60px;
        text-align: center;
    }

    .grade-a {
        background: linear-gradient(135deg, #10b981, #059669);
        color: white;
        box-shadow: 0 4px 12px rgba(16, 185, 129, 0.3);
    }

    .grade-b {
        background: linear-gradient(135deg, #06b6d4, #0891b2);
        color: white;
        box-shadow: 0 4px 12px rgba(6, 182, 212, 0.3);
    }

    .grade-c {
        background: linear-gradient(135deg, #f59e0b, #d97706);
        color: white;
        box-shadow: 0 4px 12px rgba(245, 158, 11, 0.3);
    }

    .grade-d {
        background: linear-gradient(135deg, #ef4444, #dc2626);
        color: white;
        box-shadow: 0 4px 12px rgba(239, 68, 68, 0.3);
    }

    .grade-na {
        background: #e2e8f0;
        color: #64748b;
    }

    .empty-state {
        text-align: center;
        padding: 3rem 2rem;
        color: #94a3b8;
    }

        .empty-state i {
            font-size: 4rem;
            color: #e2e8f0;
            margin-bottom: 1rem;
        }

        .empty-state p {
            font-size: 1.1rem;
            margin: 0;
        }

    .action-buttons {
        display: flex;
        gap: 1rem;
        flex-wrap: wrap;
        margin-top: 2rem;
    }

    .action-btn {
        display: inline-flex;
        align-items: center;
        gap: 0.75rem;
        padding: 1rem 2rem;
        border-radius: 16px;
        font-weight: 600;
        font-size: 1rem;
        text-decoration: none;
        transition: all 0.3s ease;
        border: 2px solid;
        position: relative;
        overflow: hidden;
    }

        .action-btn::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
            transition: left 0.5s ease;
        }

        .action-btn:hover::before {
            left: 100%;
        }

        .action-btn i {
            font-size: 1.1rem;
        }

    .btn-enroll {
        background: linear-gradient(135deg, #10b981, #059669);
        color: white;
        border-color: #10b981;
        box-shadow: 0 8px 20px rgba(16, 185, 129, 0.3);
    }

        .btn-enroll:hover {
            transform: translateY(-3px);
            box-shadow: 0 12px 30px rgba(16, 185, 129, 0.4);
            color: white;
        }

    .btn-edit {
        background: linear-gradient(135deg, #f59e0b, #d97706);
        color: white;
        border-color: #f59e0b;
        box-shadow: 0 8px 20px rgba(245, 158, 11, 0.3);
    }

        .btn-edit:hover {
            transform: translateY(-3px);
            box-shadow: 0 12px 30px rgba(245, 158, 11, 0.4);
            color: white;
        }

    .btn-back {
        background: white;
        color: #64748b;
        border-color: #e2e8f0;
        box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
    }

        .btn-back:hover {
            background: #f8fafc;
            transform: translateY(-3px);
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
            color: #64748b;
        }

   
</style>

<div class="details-container">
    <div class="page-header">
        <h1 class="page-title">
            <i class="fas fa-user-circle"></i>
            Student Details
        </h1>
    </div>

    <div class="student-profile-card">
        <div class="profile-header">
            <div class="profile-avatar">
                @(Model.FirstName?.Substring(0, 1).ToUpper())@(Model.LastName?.Substring(0, 1).ToUpper())
            </div>
            <div class="profile-info">
                <h2 class="profile-name">@Model.FirstName @Model.LastName</h2>
                <span class="profile-email">
                    <i class="fas fa-envelope"></i>
                    @Model.Email
                </span>
            </div>
        </div>

        <div class="details-grid">
            <div class="detail-item">
                <div class="detail-label">
                    <i class="fas fa-graduation-cap"></i>
                    Program
                </div>
                <div class="detail-value">@Model.Program</div>
            </div>

            <div class="detail-item">
                <div class="detail-label">
                    <i class="fas fa-chart-line"></i>
                    GPA
                </div>
                <div class="detail-value">
                    @{
                        var gpaClass = Model.GPA >= 3.5 ? "gpa-high" : (Model.GPA >= 2.5 ? "gpa-medium" : "gpa-low");
                    }
                    <span class="gpa-badge @gpaClass">
                        <i class="fas fa-star"></i>
                        @Model.GPA.ToString("F2")
                    </span>
                </div>
            </div>
        </div>
    </div>

    <div class="courses-section">
        <h3 class="section-title">
            <i class="fas fa-book"></i>
            Enrolled Courses
        </h3>

        @if (Model.Enrollments != null && Model.Enrollments.Any())
        {
            <ul class="courses-list">
                @foreach (var enrollment in Model.Enrollments)
                {
                    <li class="course-item">
                        <span class="course-title">
                            <i class="fas fa-book-open"></i>
                            @enrollment.Course.Title
                        </span>
                        @{
                            var grade = enrollment.Grade;
                           
                        }
                        <span class="grade-badge @grade">@grade</span>
                    </li>
                }
            </ul>
        }
        else
        {
            <div class="empty-state">
                <i class="fas fa-book-open"></i>
                <p>This student is not enrolled in any courses.</p>
            </div>
        }

        <div class="action-buttons">
            <a asp-action="Enroll" asp-route-id="@Model.StudentId" class="action-btn btn-enroll">
                <i class="fas fa-user-plus"></i>
                Enroll in a Course
            </a>
            <a asp-action="Edit" asp-route-id="@Model.StudentId" class="action-btn btn-edit">
                <i class="fas fa-edit"></i>
                Edit Student
            </a>
            <a asp-action="Index" class="action-btn btn-back">
                <i class="fas fa-arrow-left"></i>
                Back to List
            </a>
        </div>
    </div>
</div>

<script>
    // Add ripple effect to buttons
    document.querySelectorAll('.action-btn').forEach(button => {
        button.addEventListener('click', function(e) {
            const ripple = document.createElement('span');
            const rect = this.getBoundingClientRect();
            const size = Math.max(rect.width, rect.height);
            const x = e.clientX - rect.left - size / 2;
            const y = e.clientY - rect.top - size / 2;

            ripple.style.width = ripple.style.height = size + 'px';
            ripple.style.left = x + 'px';
            ripple.style.top = y + 'px';
            ripple.style.position = 'absolute';
            ripple.style.borderRadius = '50%';
            ripple.style.background = 'rgba(255, 255, 255, 0.6)';
            ripple.style.transform = 'scale(0)';
            ripple.style.animation = 'ripple 0.6s ease-out';
            ripple.style.pointerEvents = 'none';

            this.appendChild(ripple);
            setTimeout(() => ripple.remove(), 600);
        });
    });

    // Add keyframe for ripple animation
    const style = document.createElement('style');
    
    document.head.appendChild(style);

    // Animate course items on load
    document.addEventListener('DOMContentLoaded', function() {
        const courseItems = document.querySelectorAll('.course-item');
        courseItems.forEach((item, index) => {
            item.style.opacity = '0';
            item.style.transform = 'translateX(-20px)';
            setTimeout(() => {
                item.style.transition = 'all 0.5s ease';
                item.style.opacity = '1';
                item.style.transform = 'translateX(0)';
            }, index * 100);
        });
    });
</script>