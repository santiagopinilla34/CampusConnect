// <auto-generated />
using System;
using CampusConnect.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CampusConnect.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251027040802_AddUserTable")]
    partial class AddUserTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CampusConnect.Models.Course", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CourseId"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Instructor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("StudentsEnrolled")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            CourseId = 1,
                            Code = "COMP 232",
                            Instructor = "Dr. Li",
                            StudentsEnrolled = 0,
                            Title = "Mathematics for Computer Science"
                        },
                        new
                        {
                            CourseId = 2,
                            Code = "COMP 248",
                            Instructor = "Prof. Smith",
                            StudentsEnrolled = 0,
                            Title = "Object-Oriented Programming I"
                        },
                        new
                        {
                            CourseId = 3,
                            Code = "COMP 249",
                            Instructor = "Prof. Miller",
                            StudentsEnrolled = 0,
                            Title = "Object-Oriented Programming II"
                        },
                        new
                        {
                            CourseId = 4,
                            Code = "COMP 335",
                            Instructor = "Dr. Chen",
                            StudentsEnrolled = 0,
                            Title = "Introduction to Theoretical Computer Science"
                        },
                        new
                        {
                            CourseId = 5,
                            Code = "COMP 346",
                            Instructor = "Dr. Johnson",
                            StudentsEnrolled = 0,
                            Title = "Operating Systems"
                        },
                        new
                        {
                            CourseId = 6,
                            Code = "COMP 348",
                            Instructor = "Prof. White",
                            StudentsEnrolled = 0,
                            Title = "Principles of Programming Languages"
                        },
                        new
                        {
                            CourseId = 7,
                            Code = "COMP 352",
                            Instructor = "Dr. Thompson",
                            StudentsEnrolled = 0,
                            Title = "Data Structures and Algorithms"
                        },
                        new
                        {
                            CourseId = 8,
                            Code = "COMP 354",
                            Instructor = "Dr. Davis",
                            StudentsEnrolled = 0,
                            Title = "Introduction to Software Engineering"
                        },
                        new
                        {
                            CourseId = 9,
                            Code = "COMP 376",
                            Instructor = "Prof. Garcia",
                            StudentsEnrolled = 0,
                            Title = "Introduction to Game Development"
                        },
                        new
                        {
                            CourseId = 10,
                            Code = "COMP 426",
                            Instructor = "Dr. Patel",
                            StudentsEnrolled = 0,
                            Title = "Artificial Intelligence"
                        },
                        new
                        {
                            CourseId = 11,
                            Code = "COMP 472",
                            Instructor = "Dr. Ahmed",
                            StudentsEnrolled = 0,
                            Title = "Machine Learning"
                        },
                        new
                        {
                            CourseId = 12,
                            Code = "COMP 445",
                            Instructor = "Dr. Walker",
                            StudentsEnrolled = 0,
                            Title = "Data Communication and Networks"
                        },
                        new
                        {
                            CourseId = 13,
                            Code = "COMP 428",
                            Instructor = "Prof. Roberts",
                            StudentsEnrolled = 0,
                            Title = "Computer Graphics"
                        },
                        new
                        {
                            CourseId = 14,
                            Code = "COMP 465",
                            Instructor = "Dr. Evans",
                            StudentsEnrolled = 0,
                            Title = "Web Services and Applications"
                        },
                        new
                        {
                            CourseId = 15,
                            Code = "COMP 490",
                            Instructor = "Dr. Wilson",
                            StudentsEnrolled = 0,
                            Title = "Capstone Project"
                        });
                });

            modelBuilder.Entity("CampusConnect.Models.Enrollment", b =>
                {
                    b.Property<int>("EnrollmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EnrollmentId"));

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int?>("Grade")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("EnrollmentId");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("Enrollments");

                    b.HasData(
                        new
                        {
                            EnrollmentId = 1,
                            CourseId = 1,
                            Grade = 90,
                            StudentId = 1
                        },
                        new
                        {
                            EnrollmentId = 2,
                            CourseId = 2,
                            Grade = 85,
                            StudentId = 1
                        },
                        new
                        {
                            EnrollmentId = 3,
                            CourseId = 2,
                            Grade = 88,
                            StudentId = 2
                        },
                        new
                        {
                            EnrollmentId = 4,
                            CourseId = 3,
                            Grade = 92,
                            StudentId = 2
                        },
                        new
                        {
                            EnrollmentId = 5,
                            CourseId = 1,
                            Grade = 95,
                            StudentId = 3
                        },
                        new
                        {
                            EnrollmentId = 6,
                            CourseId = 3,
                            Grade = 89,
                            StudentId = 3
                        },
                        new
                        {
                            EnrollmentId = 7,
                            CourseId = 4,
                            Grade = 80,
                            StudentId = 4
                        },
                        new
                        {
                            EnrollmentId = 8,
                            CourseId = 5,
                            Grade = 84,
                            StudentId = 4
                        },
                        new
                        {
                            EnrollmentId = 9,
                            CourseId = 1,
                            Grade = 91,
                            StudentId = 5
                        },
                        new
                        {
                            EnrollmentId = 10,
                            CourseId = 6,
                            Grade = 87,
                            StudentId = 5
                        },
                        new
                        {
                            EnrollmentId = 11,
                            CourseId = 7,
                            Grade = 82,
                            StudentId = 6
                        },
                        new
                        {
                            EnrollmentId = 12,
                            CourseId = 8,
                            Grade = 79,
                            StudentId = 6
                        },
                        new
                        {
                            EnrollmentId = 13,
                            CourseId = 2,
                            Grade = 94,
                            StudentId = 7
                        },
                        new
                        {
                            EnrollmentId = 14,
                            CourseId = 4,
                            Grade = 88,
                            StudentId = 7
                        },
                        new
                        {
                            EnrollmentId = 15,
                            CourseId = 5,
                            Grade = 85,
                            StudentId = 8
                        },
                        new
                        {
                            EnrollmentId = 16,
                            CourseId = 6,
                            Grade = 90,
                            StudentId = 8
                        },
                        new
                        {
                            EnrollmentId = 17,
                            CourseId = 3,
                            Grade = 87,
                            StudentId = 9
                        },
                        new
                        {
                            EnrollmentId = 18,
                            CourseId = 7,
                            Grade = 82,
                            StudentId = 9
                        },
                        new
                        {
                            EnrollmentId = 19,
                            CourseId = 8,
                            Grade = 86,
                            StudentId = 10
                        },
                        new
                        {
                            EnrollmentId = 20,
                            CourseId = 9,
                            Grade = 90,
                            StudentId = 10
                        });
                });

            modelBuilder.Entity("CampusConnect.Models.Student", b =>
                {
                    b.Property<int>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StudentId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("GPA")
                        .HasColumnType("float");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Program")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("StudentId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            Email = "alice.smith@example.com",
                            FirstName = "Alice",
                            GPA = 3.7999999999999998,
                            LastName = "Smith",
                            Program = "Computer Science"
                        },
                        new
                        {
                            StudentId = 2,
                            Email = "bob.johnson@example.com",
                            FirstName = "Bob",
                            GPA = 3.5,
                            LastName = "Johnson",
                            Program = "Software Engineering"
                        },
                        new
                        {
                            StudentId = 3,
                            Email = "charlie.williams@example.com",
                            FirstName = "Charlie",
                            GPA = 3.8999999999999999,
                            LastName = "Williams",
                            Program = "Computer Science"
                        },
                        new
                        {
                            StudentId = 4,
                            Email = "david.jones@example.com",
                            FirstName = "David",
                            GPA = 3.6000000000000001,
                            LastName = "Jones",
                            Program = "Information Systems Security"
                        },
                        new
                        {
                            StudentId = 5,
                            Email = "eva.brown@example.com",
                            FirstName = "Eva",
                            GPA = 3.7000000000000002,
                            LastName = "Brown",
                            Program = "Data Science"
                        },
                        new
                        {
                            StudentId = 6,
                            Email = "liam.miller@example.com",
                            FirstName = "Liam",
                            GPA = 3.3999999999999999,
                            LastName = "Miller",
                            Program = "Software Engineering"
                        },
                        new
                        {
                            StudentId = 7,
                            Email = "sophia.davis@example.com",
                            FirstName = "Sophia",
                            GPA = 3.8999999999999999,
                            LastName = "Davis",
                            Program = "Computer Science"
                        },
                        new
                        {
                            StudentId = 8,
                            Email = "noah.wilson@example.com",
                            FirstName = "Noah",
                            GPA = 3.2000000000000002,
                            LastName = "Wilson",
                            Program = "Data Science"
                        },
                        new
                        {
                            StudentId = 9,
                            Email = "olivia.taylor@example.com",
                            FirstName = "Olivia",
                            GPA = 3.6000000000000001,
                            LastName = "Taylor",
                            Program = "Software Engineering"
                        },
                        new
                        {
                            StudentId = 10,
                            Email = "ethan.anderson@example.com",
                            FirstName = "Ethan",
                            GPA = 3.2999999999999998,
                            LastName = "Anderson",
                            Program = "Information Systems Security"
                        });
                });

            modelBuilder.Entity("CampusConnect.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsTeacher")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CampusConnect.Models.Enrollment", b =>
                {
                    b.HasOne("CampusConnect.Models.Course", "Course")
                        .WithMany("Enrollments")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CampusConnect.Models.Student", "Student")
                        .WithMany("Enrollments")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("CampusConnect.Models.Course", b =>
                {
                    b.Navigation("Enrollments");
                });

            modelBuilder.Entity("CampusConnect.Models.Student", b =>
                {
                    b.Navigation("Enrollments");
                });
#pragma warning restore 612, 618
        }
    }
}
